# Generated by Django 4.2.7 on 2023-11-20 20:51

import phonenumber_field.modelfields

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import accounts.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='почта')),
                ('name', models.CharField(max_length=30, verbose_name='имя')),
                ('surname', models.CharField(max_length=30, verbose_name='фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, verbose_name='отчество')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='дата присоединения')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='последний вход в систему')),
                ('role', models.CharField(choices=[('ученик', 'ученик'), ('учитель', 'учитель')], default='ученик', max_length=10, verbose_name='роль')),
                ('is_email_confirmed', models.BooleanField(default=False, verbose_name='электронная почта подтверждена')),
                ('is_active', models.BooleanField(default=True, verbose_name='активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='персонал')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='суперпользователь')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
                ('activated', accounts.managers.ActivatedAccountsManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='дата рождения')),
                ('school', models.CharField(blank=True, max_length=255, verbose_name='школа')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, validators=[django.core.validators.RegexValidator(message='Номер телефона необходимо ввести в формате: +XXXXXXXXXXXXX.', regex='^\\+?[0-9]{7,15}$')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
            },
        ),
    ]
